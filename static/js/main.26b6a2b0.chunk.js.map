{"version":3,"sources":["templates/button.jsx","templates/search.jsx","templates/menu.jsx","templates/toggleButton.jsx","templates/clock.jsx","templates/icon.jsx","templates/about.jsx","templates/pageTemplate.jsx","route/routes.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","_ref","_ref$styles","styles","_ref$children","children","_ref$type","type","react_default","a","createElement","className","SearchForm","_cityName","_ref$onSearch","onSearch","f","onSubmit","e","preventDefault","value","ref","input","placeholder","templates_button","defaultProps","Menu","href","Link","to","search","ToggleButton","_ref$onToggle","onToggle","onClick","Clock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hour","minute","ampm","handleToggle","bind","assertThisInitialized","nextProps","setState","increment","objectSpread","toggleButton","Component","Icon","site","rel","target","About","icon","PageTemplate","menu","ClockPage","_ref2","pageTemplate_PageTemplate","clock","AboutPage","_ref3","about","Routes","HashRouter","Switch","Route","exact","path","render","pageTemplate_ClockPage","pageTemplate_AboutPage","App","getCityTime","handleResponse","checkSeconds","resetLastSearch","_this2","minuteSum","currentHour","seconds","clearInterval","counter","_this3","setInterval","searchClicks","res","time","data","time_zone","localtime","split","Number","city","_this4","Promise","resolves","rejects","api","concat","request","XMLHttpRequest","open","onload","status","JSON","parse","response","Error","statusText","onerror","err","send","then","console","error","routes","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.26b6a2b0.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({styles='success', children='BTN', type='button'}) => (\r\n    <button className={'btn btn-' + styles} type={type}>\r\n        {children}\r\n    </button>\r\n)\r\n\r\nButton.propTypes = {\r\n    styles: PropTypes.string,\r\n    children: PropTypes.string,\r\n    type: PropTypes.string\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport Button from './button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SearchForm = ({onSearch=f=>f}) => {\r\n    let _cityName\r\n    const submit = e => {\r\n        e.preventDefault()\r\n        onSearch(_cityName.value)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submit}>\r\n            <div className=\"form-row\">\r\n                <div className=\"col-8\">\r\n                    <input type=\"text\" className=\"form-control\" \r\n                    ref={input => _cityName = input} placeholder=\"Type a city name...\"/>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <Button styles=\"success form-control\" type=\"submit\">SEARCH</Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nSearchForm.propTypes = {\r\n    onSearch: PropTypes.func\r\n}\r\n\r\nSearchForm.defaultProps = {\r\n    onSearch: f=>f\r\n}\r\n\r\nexport default SearchForm","import React from 'react'\r\nimport SearchForm from './search'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Menu = ({onSearch=f=>f}) => (\r\n    <nav className=\"navbar navbar-light bg-light\">\r\n        <div className=\"container\">\r\n            <a href=\"/home\" className=\"navbar-brand\">Global Clock</a>\r\n\r\n            <ul className=\"navbar-nav flex-row mr-md-auto\">\r\n                <li className=\"nav-item mr-2\">\r\n                    <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                </li>\r\n                <li className=\"nav-item mr-2\">\r\n                    <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n                </li>\r\n            </ul>\r\n            \r\n\r\n            <div className=\"mx-auto mx-md-0\">\r\n                <SearchForm onSearch={onSearch}/>\r\n            </div>\r\n        </div>\r\n        \r\n    </nav>\r\n)\r\n\r\nMenu.propTypes = {\r\n    onSearch: PropTypes.func\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ToggleButton = ({onToggle=f=>f}) => (\r\n    <button className=\"btn btn-secondary\" type=\"button\" \r\n    onClick={() => onToggle()}>\r\n        12/24\r\n    </button>\r\n)\r\n\r\nToggleButton.propTypes = {\r\n    onToggle: PropTypes.func\r\n}\r\n\r\nexport default ToggleButton","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ToggleButton from './toggleButton'\r\n\r\nclass Clock extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            hour: 0,\r\n            minute: 0,\r\n            ampm: '24'\r\n        }\r\n\r\n        this.handleToggle = this.handleToggle.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState((state, props) => ({\r\n            hour: nextProps.hour,\r\n            minute: nextProps.minute + props.increment\r\n        }))\r\n    }\r\n\r\n    handleToggle() {\r\n        if (this.state.ampm === '24') {\r\n          this.setState({...this.state, ampm: '12'})\r\n        } else if (this.state.ampm === '12') {\r\n          this.setState({...this.state, ampm: '24'})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"col-6 col-md-4\">\r\n            <div className=\"clockBorder p-3\">\r\n                <div className=\"clockDisplay\">\r\n                    <span>{(this.state.ampm === '24') ?\r\n                                (this.state.hour > 9) ? \r\n                                this.state.hour : '0' + this.state.hour :\r\n                                (this.state.hour < 10) ? \r\n                                    '0' + this.state.hour :\r\n                                (this.state.hour < 13) ?\r\n                                this.state.hour :\r\n                                (this.state.hour === 24) ?\r\n                                    '00' : this.state.hour - 12 }:</span>\r\n                    <span>{(this.state.minute > 9) ? this.state.minute : '0' + this.state.minute}</span>\r\n                    <span> </span>\r\n                    <span>{(this.state.ampm === '24') ?\r\n                                '' :\r\n                                (this.state.hour < 13) ?\r\n                                    'AM' : 'PM'}</span>\r\n                </div>            \r\n            </div>\r\n            <div className=\"mt-2\">\r\n                <ToggleButton onToggle={this.handleToggle}/>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nClock.propTypes = {\r\n    hour: PropTypes.number,\r\n    minute: PropTypes.number\r\n}\r\n\r\nexport default Clock","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Icon = ({site, children}) => (\r\n    <div className=\"icon d-inline-block mx-1 mt-2 mb-5 pt-3\">\r\n        <a href={site} rel=\"noopener noreferrer\" target=\"_blank\">\r\n            <i className={children}></i>\r\n        </a>\r\n    </div>\r\n)\r\n\r\nIcon.propTypes = {\r\n    site: PropTypes.string,\r\n    children: PropTypes.string\r\n}\r\n\r\nexport default Icon","import React from 'react'\r\nimport Icon from './icon'\r\n\r\nconst About = () => (\r\n    <div className=\"about col-10 col-md-6\">\r\n        <h1 className=\"display-3\">Hello, stranger!</h1>\r\n        <p>Thank you for exploring the React Global Clock! </p>\r\n        <p>I am Matheus Souza and this is a portfolio project I have developed using React. </p>\r\n        <p>Check out my other projects:</p>\r\n\r\n        <Icon site=\"https://github.com/souzasmatheus/\">fab fa-github</Icon>\r\n        <Icon site=\"https://www.linkedin.com/in/matheus-souza-6ab17616b/\">fab fa-linkedin-in</Icon>\r\n    </div>\r\n)\r\n\r\nexport default About","import React from 'react'\r\nimport Menu from './menu'\r\n\r\nimport Clock from '../templates/clock'\r\nimport About from '../templates/about'\r\n\r\nconst PageTemplate = ({children, onSearch}) => (\r\n    <div className=\"App\">\r\n        <Menu onSearch={onSearch}/>\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row justify-content-center\">\r\n                {children}               \r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport const ClockPage = ({onSearch, hour, minute, increment}) => (\r\n    <PageTemplate onSearch={onSearch}>\r\n        <Clock hour={hour}\r\n                minute={minute}\r\n                increment={increment}/>\r\n    </PageTemplate>\r\n)\r\n\r\nexport const AboutPage = ({onSearch}) => (\r\n    <PageTemplate onSearch={onSearch}>\r\n        <About />\r\n    </PageTemplate>\r\n)","import React from 'react'\r\nimport {Switch, Route, HashRouter} from 'react-router-dom'\r\n\r\nimport {ClockPage, AboutPage} from '../templates/pageTemplate'\r\n\r\nconst Routes = ({hour, minute, increment, onSearch}) => (\r\n    <HashRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" render={() => <ClockPage onSearch={onSearch}\r\n                                                hour={hour}\r\n                                                minute={minute}\r\n                                                increment={increment}/>}/>\r\n            <Route path=\"/about\" render={() => <AboutPage onSearch={onSearch}/>} />\r\n        </ Switch>\r\n    </HashRouter>\r\n)\r\n\r\nexport default Routes","import React, { Component } from 'react'\r\nimport './App.css'\r\nimport Routes from './route/routes'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      hour: 0,\r\n      minute: 0,\r\n      increment: 0\r\n    }\r\n\r\n    this.getCityTime = this.getCityTime.bind(this)\r\n    this.handleResponse = this.handleResponse.bind(this)\r\n    this.checkSeconds = this.checkSeconds.bind(this)\r\n    this.resetLastSearch = this.resetLastSearch.bind(this)\r\n  }\r\n\r\n  checkSeconds() {\r\n    const minuteSum = this.state.minute + this.state.increment\r\n    const currentHour = this.state.hour\r\n    if (this.seconds % 60 === 0 && minuteSum < 59) {\r\n      const increment = this.seconds / 60\r\n      clearInterval(this.counter)\r\n      this.setState({...this.state, increment})\r\n    } else if (this.seconds % 60 === 0 && minuteSum === 59 && currentHour === 23) {\r\n      this.seconds = 0\r\n      const hour = 0\r\n      const minute = 0\r\n      const increment = 0\r\n      clearInterval(this.counter)\r\n      this.setState((state, props) => ({\r\n        ...this.state,\r\n        hour,\r\n        minute,\r\n        increment\r\n      }))\r\n    } else if (this.seconds % 60 === 0 && minuteSum === 59) {\r\n      this.seconds = 0\r\n      const minute = 0\r\n      const increment = 0\r\n      clearInterval(this.counter)\r\n      this.setState((state, props) => ({\r\n        ...this.state,\r\n        hour: state.hour + 1,\r\n        minute,\r\n        increment\r\n      }))\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.counter = setInterval(() => {\r\n      this.seconds = this.seconds + 1\r\n      this.checkSeconds()\r\n    }, 1000)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.seconds = 0\r\n    this.searchClicks = 0\r\n  }\r\n\r\n  handleResponse(res) {\r\n    const timeWithDate = res.data.time_zone[0].localtime\r\n    const time = timeWithDate.split(' ')[1]\r\n    const hour = time.split(':')[0]\r\n    const minute = time.split(':')[1]\r\n    this.setState({\r\n      ...this.state,\r\n      hour: Number(hour),\r\n      minute: Number(minute),\r\n      increment: 0\r\n    })\r\n  }\r\n\r\n  getCityTime(city) {\r\n    new Promise((resolves, rejects) => {\r\n      const api = `https://api.worldweatheronline.com/premium/v1/tz.ashx?key=3b29e5a6363a47a1930164006192801&q=${city}&format=json`\r\n      const request = new XMLHttpRequest()\r\n      request.open('GET', api)\r\n      request.onload = () =>\r\n        (request.status === 200) ?\r\n          resolves(JSON.parse(request.response)) :\r\n          rejects(Error(request.statusText))\r\n      request.onerror = (err) => rejects(err)\r\n      request.send()\r\n    })\r\n    .then(\r\n      res => {\r\n        this.handleResponse(res)\r\n      },\r\n      err => console.error(\r\n        new Error(\"didn't work\")\r\n      )\r\n    )\r\n  }\r\n\r\n  resetLastSearch(city) {\r\n    this.searchClicks ++\r\n    if (this.searchClicks > 0) {\r\n      this.searchClicks = 0\r\n      clearInterval(this.counter)\r\n      this.seconds = 0\r\n      this.getCityTime(city)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Routes hour={this.state.hour}\r\n      minute={this.state.minute}\r\n      increment={this.state.increment}\r\n      onSearch={this.resetLastSearch}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}